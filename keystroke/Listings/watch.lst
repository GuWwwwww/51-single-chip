C51 COMPILER V9.54   WATCH                                                                 11/13/2024 23:42:15 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE WATCH
OBJECT MODULE PLACED IN .\Objects\watch.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE watch.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\wat
                    -ch.lst) TABS(2) OBJECT(.\Objects\watch.obj)

line level    source

   1          #include<reg51.h>
   2          #define N 8
   3          sbit key1 = P3^1;
   4          sbit key2 = P3^0;
   5          sbit key3 = P3^2;
   6          sbit key4 = P3^3;
   7          sbit beep = P2^5;
   8          sbit led = P2^0;
   9          unsigned char cur_sta[4]={1,1,1,1};
  10          unsigned char pre_sta[4]={1,1,1,1};
  11          unsigned char clock_sta = 1; //1表示时钟运行，0表示暂停 
  12          unsigned char key_value=0;
  13          unsigned char beep_on=0;  //1表示闹钟响，0表示闹钟关闭
  14          
  15          unsigned char seg_mode[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,
  16                                  0x7f,0x6f};
  17          unsigned char disp_code[8]={0x3f,0x3f,0x40,0x3f,0x3f,0x40,0x3f,0x3f};
  18          
  19          void delay_ms(unsigned int z) //延时函数
  20          {
  21   1        unsigned int j;
  22   1        unsigned int i;
  23   1        for(i=0;i<z;i++)
  24   1          for(j=0;j<125;j++);
  25   1      }
  26          
  27          void seg_led_scan() //数码管扫描函数
  28          {
  29   1        static unsigned int i;
  30   1        unsigned char bit_mode[8]={0xff,0xfa,0xf7,0xf3,0xef,0xea,0xe7,0xe3};
  31   1        
  32   1        P2=bit_mode[i];  //位选信号，控制哪个数码管亮
  33   1        P0=disp_code[i]; //段选信号，控制亮什么
  34   1        delay_ms(1); //控制刷新率
  35   1        P0=0x00;  //消除鬼影
  36   1        i++;
  37   1        if (i==N) i=0;
  38   1      }
  39          
  40          void disp_code_update() //数码管更新函数
  41          {
  42   1        static unsigned char sec=0;
  43   1        static unsigned char min=0;
  44   1        static unsigned char hour=0;
  45   1        if (clock_sta==0)
  46   1        {
  47   2          if (key_value)
  48   2          {
  49   3            if (key_value==2)
  50   3            {
  51   4              if (sec==59)
  52   4                sec=0;
  53   4              else sec++;
  54   4            }
C51 COMPILER V9.54   WATCH                                                                 11/13/2024 23:42:15 PAGE 2   

  55   3            else if (key_value==3)
  56   3            {
  57   4              if (min==59)
  58   4                min=0;
  59   4              else min++;
  60   4            }
  61   3            else if (key_value==4)
  62   3            {
  63   4              if (hour==23)
  64   4                hour=0;
  65   4              else hour++;
  66   4            }
  67   3          key_value=0;
  68   3          }
  69   2        }
  70   1        else
  71   1          sec++;
  72   1        if(sec==60) 
  73   1        {
  74   2          sec=0;
  75   2          min++;
  76   2          if(min==60)
  77   2          {
  78   3            hour++;
  79   3            if(hour==24) hour=0;
  80   3          }
  81   2        }
  82   1        disp_code[7]=seg_mode[sec%10];
  83   1        disp_code[6]=seg_mode[sec/10];
  84   1        disp_code[4]=seg_mode[min%10];
  85   1        disp_code[3]=seg_mode[min/10];
  86   1        disp_code[1]=seg_mode[hour%10];
  87   1        disp_code[0]=seg_mode[hour/10];
  88   1        
  89   1        if ((hour==0)&&(min==0)&&(sec==30))
  90   1          beep_on=1;
  91   1        
  92   1      }
  93          
  94          void alarm_on() //蜂鸣器设置闹钟
  95          {
  96   1        static unsigned beep_count = 0;
  97   1        beep = ~beep;//产生一定频率的脉冲信号
  98   1        beep_count++;
  99   1        if (beep_count==600)
 100   1        {
 101   2          beep_count=0;
 102   2          beep_on=0;
 103   2        }
 104   1      }
 105          
 106          void cur_sta_update() //按键状态更新函数
 107          {
 108   1        static unsigned char buff[4]={0xff,0xff,0xff,0xff};
 109   1        unsigned char i=0;
 110   1        //消抖
 111   1        buff[0]=(buff[0]<<1)|key1;//把新抽样的值加到buff中
 112   1        buff[1]=(buff[1]<<1)|key2;//把新抽样的值加到buff中
 113   1        buff[2]=(buff[2]<<1)|key3;//把新抽样的值加到buff中
 114   1        buff[3]=(buff[3]<<1)|key4;//把新抽样的值加到buff中
 115   1        for(i=0;i<4;i++)
 116   1        {
C51 COMPILER V9.54   WATCH                                                                 11/13/2024 23:42:15 PAGE 3   

 117   2          if (buff[i]==0xff)//8次采样全为1
 118   2            cur_sta[i]=1;
 119   2          else if (buff[i]==0x00)//全为0
 120   2            cur_sta[i]=0;
 121   2        }
 122   1      }
 123          
 124          void timer1_config() //定时器函数
 125          {
 126   1        TR1=1; //打开定时计数器1
 127   1        TMOD=0x10; //定时器工作方式为1
 128   1        //定时计数器的初始值设置
 129   1        TH1=64536>>8;  //(65536-x)>>8
 130   1        TL1=64536;  //(65536-x)%256
 131   1        EA=1;  //中断总允许
 132   1        ET1=1; //定时器1中断分允许
 133   1      }
 134          
 135          void timer1_50ms() interrupt 3 //中断函数
 136          {
 137   1        static unsigned int count=0;
 138   1        TH1=64536>>8;  //重新设置初始值
 139   1        TL1=64536;
 140   1        cur_sta_update();
 141   1        count++;
 142   1        if (count==1000)
 143   1        {
 144   2          count=0;
 145   2          disp_code_update();
 146   2        }
 147   1        if (beep_on) 
 148   1          alarm_on();
 149   1          
 150   1      }
 151          
 152          void key_scan() //键值扫描函数
 153          {
 154   1        
 155   1        unsigned char i=0;
 156   1        for(i=0;i<4;i++)
 157   1        {
 158   2          if(cur_sta[i]!=pre_sta[i])
 159   2          {
 160   3            if(pre_sta[i])
 161   3            {
 162   4              key_value=i+1;
 163   4            }
 164   3            pre_sta[i]=cur_sta[i];
 165   3          }
 166   2          
 167   2        }
 168   1      }
 169          
 170          void key_action() //按键行为函数
 171          {
 172   1        if (key_value==1) 
 173   1        { 
 174   2          clock_sta = !clock_sta;
 175   2          key_value=0;
 176   2        }
 177   1        
 178   1      }
C51 COMPILER V9.54   WATCH                                                                 11/13/2024 23:42:15 PAGE 4   

 179          
 180          void main()
 181          {
 182   1        timer1_config(); //配置定时器1
 183   1        while(1)
 184   1        {
 185   2          seg_led_scan(); //数码管刷新函数
 186   2          key_scan();
 187   2          key_action();
 188   2        }
 189   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    546    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     42       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
