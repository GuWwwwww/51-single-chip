C51 COMPILER V9.54   LCD_CLASS                                                             11/09/2024 22:14:41 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD_CLASS
OBJECT MODULE PLACED IN .\Objects\lcd_class.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd_class.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\lcd_class.lst) TABS(2) OBJECT(.\Objects\lcd_class.obj)

line level    source

   1          #include<reg51.h>
   2          #include<math.h>
   3          extern void lcd_init();
   4          extern void lcd_write_dat(unsigned char dat);
   5          extern void cursor_set(unsigned char x, unsigned char y);
   6          extern void delay_ms(unsigned char z);
   7          extern void cur_sta_update();
   8          extern char key_scan();
   9          extern void timer1_config();
  10          bit flag=0;
  11          bit flag_p=0;
  12          char sign=1; //定义符号位
  13          unsigned char count=0; //记录小数点后面的位数
  14          unsigned char count0=0; //记录小数点紧接着0的个数
  15          unsigned int cur_decimal=0; //定义小数部分
  16          unsigned int cur_integer=0; //定义整数部分
  17          
  18          int round(float value) //定义四舍五入到整数函数
  19          {
  20   1        return (int)(value + 0.5);
  21   1      }
  22          
  23          void show(float show_value)
  24          {
  25   1        unsigned char i=0;
  26   1        unsigned char k=0;
  27   1        unsigned char c=count0;
  28   1        
  29   1        cur_integer = show_value; //整数部分
  30   1        cur_decimal = round((show_value - cur_integer) * pow(10,count));//小数部分
  31   1        cursor_set(1,15);
  32   1        if (show_value==0)
  33   1        {
  34   2          cursor_set(1,15);
  35   2          lcd_write_dat('0');
  36   2          k++;
  37   2        }
  38   1        else
  39   1        {
  40   2          if (flag_p==1) //如果有小数，则先显示小数
  41   2          {
  42   3            while(cur_decimal)
  43   3            {
  44   4              cursor_set(1,15-k);
  45   4              lcd_write_dat((cur_decimal%10)+'0');
  46   4              cur_decimal/=10;
  47   4              k++;
  48   4            }
  49   3            while(c)
  50   3            {
  51   4              cursor_set(1,15-k);
  52   4              lcd_write_dat('0');
  53   4              k++;
  54   4              c--;
C51 COMPILER V9.54   LCD_CLASS                                                             11/09/2024 22:14:41 PAGE 2   

  55   4            }
  56   3            cursor_set(1,15-k);
  57   3            lcd_write_dat('.');
  58   3            k++;
  59   3          }
  60   2          while(cur_integer) //显示整数
  61   2          {
  62   3            cursor_set(1,15-k);
  63   3            lcd_write_dat((cur_integer%10)+'0');
  64   3            cur_integer/=10;
  65   3            k++;
  66   3          }
  67   2          if (sign==-1)  //如果符号是负号，最前面显示负号
  68   2          {
  69   3            cursor_set(1,15-k);
  70   3            lcd_write_dat('-');
  71   3            k++;
  72   3          }
  73   2        }
  74   1        cursor_set(1,0);
  75   1        for(i=0;i<(16-k);i++)
  76   1            lcd_write_dat(' ');
  77   1      }
  78          
  79          void key_action(unsigned char key_value)
  80          {
  81   1        static float cur_value=0;   //记录按键输入的数字
  82   1        static float cur_value_real=0;
  83   1        static float result=0;
  84   1        static float result_unsigned=0;
  85   1        static float add1=0;
  86   1        static unsigned char op=0;
  87   1        if (key_value>=0 && key_value<=9) //按下数字
  88   1        {
  89   2          if (flag_p==1)
  90   2          {
  91   3            if (key_value==0)
  92   3              count0++;
  93   3            count++;
  94   3            cur_value=cur_value+key_value*pow(0.1,count);
  95   3          }
  96   2          else
  97   2            cur_value=cur_value*10+key_value;
  98   2          cur_value_real=cur_value*sign; //加上符号，计算真实值
  99   2          show(cur_value);
 100   2        }
 101   1        else if (key_value==10) //按下小数点
 102   1        {
 103   2          flag_p=1;
 104   2          count=0;
 105   2          show(cur_value);
 106   2        }
 107   1        else if (key_value==11) //平方键，对操作数进行平方运算
 108   1        {
 109   2          cur_value_real*=cur_value_real;
 110   2          sign=1;
 111   2          count0=0;
 112   2          show(cur_value_real);
 113   2        }
 114   1        else if (key_value>=12 && key_value<=15) //按下符号
 115   1        {
 116   2          if(op==0 && cur_value==0 && result==0 && key_value==13)//当第一个按下减号也可以当作负号
C51 COMPILER V9.54   LCD_CLASS                                                             11/09/2024 22:14:41 PAGE 3   

 117   2            sign=-1;
 118   2          else
 119   2          {
 120   3            sign=1;
 121   3            op=key_value;
 122   3          }
 123   2          if (flag==1) cur_value_real=result;//把上一步的结果存起来
 124   2          add1=cur_value_real; //把键入的第一个操作数存起来
 125   2          flag=0;
 126   2          flag_p=0;
 127   2          cur_value=0;
 128   2          cur_decimal=0;
 129   2          cur_integer=0;
 130   2          sign=1;
 131   2          count0=0;
 132   2        }
 133   1        else if (key_value==16) //按下删除键，删除上一个按下的数字
 134   1        {
 135   2          if (flag_p==1) //如果有小数，则删除小数位
 136   2          {
 137   3            cur_decimal/=10;
 138   3            count--;
 139   3            cur_value=cur_integer+cur_decimal*pow(10,-count);
 140   3          }
 141   2          else
 142   2            cur_value=(unsigned int)(cur_value/10);
 143   2          cur_value_real=cur_value*sign;
 144   2          show(cur_value);
 145   2        }
 146   1        else if (key_value==17) //按下正负号键
 147   1        {
 148   2          sign=-sign;
 149   2          cur_value_real=cur_value*sign;
 150   2          show(cur_value);
 151   2        }
 152   1        else if (key_value==18) //按下等号
 153   1        {
 154   2          flag=1;
 155   2          count0=0;
 156   2          switch(op)
 157   2          {
 158   3            case 12: result=add1+cur_value_real;break;
 159   3            case 13: result=add1-cur_value_real;break;
 160   3            case 14: result=add1*cur_value_real;break;
 161   3            case 15: result=add1/cur_value_real;break;
 162   3            default: break;
 163   3          }
 164   2          if (result<0) sign=-1;//判断结果的正负
 165   2          else sign=1;
 166   2          result_unsigned = (result < 0) ? -result : result; // 计算结果的绝对值
 167   2          if (result_unsigned!=(int)result_unsigned) 
 168   2          {
 169   3            // 结果是小数，则计算小数的位数
 170   3            flag_p=1;
 171   3            count=0;
 172   3            cur_decimal=result_unsigned-(int)result_unsigned;
 173   3              
 174   3            while (cur_decimal>0)
 175   3            {
 176   4               cur_decimal*=10;
 177   4               cur_decimal-=(int)cur_decimal;
 178   4               count++;
C51 COMPILER V9.54   LCD_CLASS                                                             11/09/2024 22:14:41 PAGE 4   

 179   4            }
 180   3          }
 181   2          else
 182   2          {
 183   3            flag_p = 0;
 184   3            count = 0;
 185   3          }
 186   2          show(result_unsigned);
 187   2          flag_p=0;
 188   2          cur_value=0;
 189   2          cur_value_real=0;
 190   2        }
 191   1        else if (key_value==19) //按下清除键
 192   1        {
 193   2          cur_decimal=0;
 194   2          cur_integer=0;
 195   2          cur_value=0;
 196   2          cur_value_real=0;
 197   2          result=0;
 198   2          result_unsigned=0;
 199   2          op=0;
 200   2          flag=0;
 201   2          flag_p=0;
 202   2          count=0;
 203   2          count0=0;
 204   2          sign=1;
 205   2          show(0);
 206   2        }
 207   1      }
 208          
 209          void main()
 210          {
 211   1        char key_value=-1;
 212   1        timer1_config(); //配置定时器1
 213   1        lcd_init();
 214   1        while(1)
 215   1        {
 216   2          key_value=key_scan();
 217   2          key_action(key_value);
 218   2        }
 219   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1363    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
